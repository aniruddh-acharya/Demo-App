import { __decorate, __metadata } from "tslib";
import { Module, OnAdd, ProjectPackageJson } from "@tsed/cli-core";
import { Inject } from "@tsed/di";
import { TypeORMGenerateHook } from "./hooks/TypeORMGenerateHook.js";
import { TypeORMInitHook } from "./hooks/TypeORMInitHook.js";
let CliPluginTypeORMModule = class CliPluginTypeORMModule {
    packageJson;
    install() {
        this.packageJson.addDependencies({
            typeorm: "latest"
        });
    }
};
__decorate([
    Inject(),
    __metadata("design:type", ProjectPackageJson)
], CliPluginTypeORMModule.prototype, "packageJson", void 0);
__decorate([
    OnAdd("@tsed/cli-plugin-typeorm"),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CliPluginTypeORMModule.prototype, "install", null);
CliPluginTypeORMModule = __decorate([
    Module({
        imports: [TypeORMInitHook, TypeORMGenerateHook]
    })
], CliPluginTypeORMModule);
export { CliPluginTypeORMModule };
//# sourceMappingURL=CliPluginTypeORMModule.js.map