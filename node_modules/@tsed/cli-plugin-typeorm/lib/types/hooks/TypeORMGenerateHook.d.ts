import { GenerateCmdContext, ProvidersInfoService } from "@tsed/cli";
import { CliDockerComposeYaml, ProjectPackageJson, SrcRendererService, Tasks } from "@tsed/cli-core";
export interface TypeORMGenerateOptions extends GenerateCmdContext {
    typeormDataSource: string;
    datasourceName: string;
}
export declare class TypeORMGenerateHook {
    private providersInfoService;
    protected projectPackageJson: ProjectPackageJson;
    protected srcRenderService: SrcRendererService;
    protected cliDockerComposeYaml: CliDockerComposeYaml;
    constructor(providersInfoService: ProvidersInfoService);
    onGeneratePrompt(): Promise<{
        type: string;
        name: string;
        message: string;
        when(state: any): boolean;
        source: (state: any, keyword: string) => Promise<{
            name: string;
            value: string;
        }[]>;
    }[]>;
    onGenerateExec(ctx: TypeORMGenerateOptions): Tasks;
    getTypeORMTypes(): [string, import("@tsed/cli").Feature][];
    generateDataSourceTasks(ctx: TypeORMGenerateOptions): {
        title: string;
        task: () => Promise<void>;
    }[];
}
